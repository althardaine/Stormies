@{
    ViewBag.Title = "Stormies";
}

<head>
    <title>Stormies</title>
    <link rel="stylesheet" type="text/css" href="../../Content/themes/mine/canvas.css">
</head>

<img src="../../Images/Stormies.png" alt="Stormies" height="100" width="600">

<body style="background: black">

    <div class="container" style="background: black">
        <input type="text" id="playerName" />
        <input type="button" id="joinGame" value="Join" />
        <ul id="players"></ul>
    </div>

    <div id="game-area"></div>

    @section scripts {
        <script src="../../Scripts/jquery.signalR-2.2.0.min.js"></script>
        <script src="../../Scripts/phaser.js"></script>
        <script src="/signalr/hubs"></script>

        <script type="text/javascript">

            $(function () {

                window.onload = function () {

                    var gameHub = $.connection.gameHub;
                    var speed = 300;
                    var rotationSpeed = 300;
                    var myId;
                    var map;
                    var layer;
                    var players = {};
                    var wKey, sKey, aKey, dKey;


                    gameHub.client.youJoined = function (id, gameState) {
                        myId = id;
                        $('#players').empty();
                        for (var playerId in gameState.Players) {
                            players[playerId] = gameArea.add.sprite(gameState.Players[playerId].PositionX, gameState.Players[playerId].PositionY, 'player');
                            players[playerId].anchor.set(0.5);
                            players[playerId].angle = gameState.Players[playerId].Angle;
                            $('#players').append('<li>' + htmlEncode(gameState.Players[playerId].Name) + " " + htmlEncode(playerId) + '</li>');
                        };
                        var player = players[myId];
                        gameArea.physics.arcade.enable(player);
                        gameArea.camera.follow(player);
                        player.body.velocity.x = 0;
                        player.body.velocity.y = 0;
                        player.body.collideWorldBounds = true;
                    };

                    gameHub.client.playerJoined = function (playerId, player) {
                        $('#players').append('<li>' + htmlEncode(player.Name + " " + playerId) + '</li>');
                        if (playerId !== myId) {
                            players[playerId] = gameArea.add.sprite(player.PostionX, player.PositionY, 'player');
                            players[playerId].anchor.set(0.5);
                        }
                    }

                    gameHub.client.playerLeft = function (gameState, id) {
                        $('#players').empty();
                        for (var playerId in gameState.Players) {
                            $('#players').append('<li>' + htmlEncode(gameState.Players[playerId].Name) + " " + htmlEncode(playerId) + '</li>');
                        };
                        players[id].destroy();
                        delete players[id];
                    };

                    gameHub.client.passErrorMessage = function (message) {
                        alert(message);
                    };

                    gameHub.client.playerMoved = function (playerId, player) {
                        if (playerId in players) {
                            players[playerId].x = player.PositionX;
                            players[playerId].y = player.PositionY;
                            players[playerId].angle = player.Angle;
                        }
                    }

                    var gameArea = new Phaser.Game(800, 600, Phaser.AUTO, 'phaser-example', { preload: preload, create: create, update: update });

                    function preload() {
                        gameArea.load.tilemap('stormies', '../../Map/StormiesMap.json', null, Phaser.Tilemap.TILED_JSON);
                        gameArea.load.image('tiles', '../../Tiles/stormies.png');
                        gameArea.load.image('player', '../../Tiles/warrior.png');
                    }

                    function create() {
                        gameArea.stage.backgroundColor = '#787878';

                        map = gameArea.add.tilemap('stormies');
                        map.addTilesetImage('StormiesTiles', 'tiles');


                        layer = map.createLayer('World1');
                        layer.resizeWorld();
                        layer.wrap = true;
                    }

                    function update() {

                        if (myId in players) {
                            var player = players[myId];

                            player.body.velocity.x = 0;
                            player.body.velocity.y = 0;
                            player.body.angularVelocity = 0;

                            if (aKey.isDown) {
                                player.body.angularVelocity = -rotationSpeed;
                            } else if (dKey.isDown) {
                                player.body.angularVelocity = rotationSpeed;
                            }
                            if (wKey.isDown) {
                                gameArea.physics.arcade.velocityFromAngle(player.angle, speed, player.body.velocity);
                            } else if (sKey.isDown) {
                                gameArea.physics.arcade.velocityFromAngle(player.angle, -speed / 2, player.body.velocity);
                            }
                            gameHub.server.moveRequest(player.x, player.y, player.angle);
                            
                        }
                    }

                    $.connection.hub.start().done(function () {
                        $('#joinGame').click(function () {
                            wKey = gameArea.input.keyboard.addKey(Phaser.Keyboard.W);
                            sKey = gameArea.input.keyboard.addKey(Phaser.Keyboard.S);
                            aKey = gameArea.input.keyboard.addKey(Phaser.Keyboard.A);
                            dKey = gameArea.input.keyboard.addKey(Phaser.Keyboard.D);
                            gameHub.server.joinRequest($('#playerName').val());
                        });
                        $(window).bind('beforeunload', function () {
                            gameHub.server.leaveRequest();
                        });
                    });
                }

            });

            function htmlEncode(value) {
                var encodedValue = $('<div />').text(value).html();
                return encodedValue;
            }
        </script>
    }
</body>